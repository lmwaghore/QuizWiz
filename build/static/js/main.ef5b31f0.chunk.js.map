{"version":3,"sources":["Fetcher.ts","utils.ts","App.tsx","index.tsx"],"names":["Difficulty","questionFetcher","amount","difficulty","a","endpoint","fetch","json","data","results","map","question","answers","arr","incorrect_answers","correct_answer","sort","Math","random","App","useState","loading","setLoading","questions","setQuestions","playerAnswers","setPlayerAnswers","setQuestionNumber","setScore","gameOver","setGameOver","triviaStarter","EASY","newGame","console","log","className","length","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GAaYA,E,uFAAAA,K,YAAAA,E,gBAAAA,E,aAAAA,M,KAML,IAAMC,EAAe,uCAAG,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,6DACvBC,EADuB,6CAC0BH,EAD1B,uBAC+CC,EAD/C,2BAEHG,MAAMD,GAFH,8BAEcE,OAFd,cAEvBC,EAFuB,yBAGtBA,EAAKC,QAAQC,KAAI,SAACC,GAAD,mBAAC,eAElBA,GAFiB,IAGpBC,SCzBmBC,EDyBD,GAAD,mBAAKF,EAASG,mBAAd,CAAiCH,EAASI,iBCxBxD,YAAIF,GAAKG,MAAK,kBAAMC,KAAKC,SAAW,SADrB,IAACL,MDmBM,2CAAH,wD,OEwDbM,EA9DH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAA0B,IAA5D,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0CJ,mBAAyB,IAAnE,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA4CN,mBAAS,GAArD,mBAAuBO,GAAvB,WACA,EAA0BP,mBAAS,GAAnC,mBAAcQ,GAAd,WACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,4BAAA3B,EAAA,6DAEpBkB,GAAW,GAEXQ,GAAY,GAJQ,SAME7B,EAvBF,GAyBlBD,EAAWgC,MARO,OAMdC,EANc,OAUpBT,EAAaS,GACbL,EAAS,GACTF,EAAiB,IACjBC,EAAkB,GAClBL,GAAW,GAdS,4CAAH,qDA4BnB,OAFAY,QAAQC,IAAIZ,GAGV,sBAAKa,UAAU,MAAf,UACE,0CAEGP,GAjDe,KAiDHJ,EAAcY,SACzB,wBAAQD,UAAU,QAAQE,QAASP,EAAnC,oBAIFF,GAAY,mBAAGO,UAAU,QAAb,yBACbf,GAAY,mBAAGe,UAAU,UAAb,qCASb,wBAAQA,UAAU,OAAOE,QAzBR,aAyBjB,+BChENC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ef5b31f0.chunk.js","sourcesContent":["import { shuffler } from './utils';\n\ntype Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  question: string;\n  type: string;\n}\n\nexport type QuestionState = Question & { answers: string[] };\n\nexport enum Difficulty {\n  EASY = 'easy',\n  MEDIUM = 'medium',\n  HARD = 'hard'\n}\n\nexport const questionFetcher = async (amount: number, difficulty: Difficulty) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  const data = await (await fetch(endpoint)).json();\n  return data.results.map((question: Question) => (\n    {\n      ...question,\n      answers: shuffler([...question.incorrect_answers, question.correct_answer])\n    }))\n}","export const shuffler = (arr: any[]) => {\n  return [...arr].sort(() => Math.random() - 0.5);\n}","import React, { useState } from 'react';\nimport { questionFetcher, Difficulty, QuestionState } from './Fetcher';\nimport QuestionCard from './components/QuestionCard';\n\nconst TOTAL_QUESTIONS = 10;\n\ntype AnswerObject = {\n  question: string;\n  playerAnswer: string;\n  isCorrect: boolean;\n  correctAnswer: string\n}\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [playerAnswers, setPlayerAnswers] = useState<AnswerObject[]>([]);\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const triviaStarter = async () => {\n    //loading the api fetch\n    setLoading(true);\n    //reset game state\n    setGameOver(false);\n\n    const newGame = await questionFetcher(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newGame);\n    setScore(0);\n    setPlayerAnswers([]);\n    setQuestionNumber(0);\n    setLoading(false);\n  }\n\n\n  const answerchecker = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n\n  const nextQuestion = () => {\n\n  }\n\n  console.log(questions);\n\n  return (\n    <div className=\"App\">\n      <h1>QUIZWIZ</h1>\n      {\n        (gameOver || playerAnswers.length === TOTAL_QUESTIONS) &&\n         (<button className=\"start\" onClick={triviaStarter}>\n          Start\n        </button>)\n      }\n      {!gameOver && <p className=\"score\">Your Score:</p>}\n      {loading && (<p className=\"Loading\">Loading Questions . . .</p>)}\n      {/* <QuestionCard\n        questionNumber={questionNumber + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[questionNumber].question}\n        answers={questions[questionNumber].answers}\n        playerAnswer={playerAnswers ? playerAnswers[questionNumber] : undefined }\n        callback={answerchecker}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next Question\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('App')\n);"],"sourceRoot":""}